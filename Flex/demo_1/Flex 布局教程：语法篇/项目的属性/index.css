* {
padding: 0;
margin: 0;
}
body {
    background: rgba(51,133,255,0.4);
}
.box-wrap {
    width: 1000px;
    margin: 0 auto;
    background: #fff;
    border: 1px solid #f6f6f6;
}
.box-wrap h2 {
    font-weight: normal;
    padding: 10px 10px 20px;
}
.box p {
    padding: 4px 10px; 
    text-align: left;
    line-height: 26px;
}
.box-wrap h3 {
    padding: 4px 10px 12px; 
    text-align: left;
    font-weight: normal;
}
.wrap {
    width: 600px;
    height:80px;
    background: #ffb300;
    margin: 10px;
    margin-bottom: 30px;
    display: flex;
    flex-direction: row;
}   
.item {
    width: 60px;
    height: 60px;
    line-height: 60px;
    text-align: center;
    color: #fff;
    background: #0078d7;
    margin: 10px;
}
code {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px;
    font-size: 20px;
    line-height: 28px;
    background-color: #ffb300;
    border-radius: 5px;
    margin: auto 3px;
}
.wrap .item {
    display:flex;
    justify-content: center;
} 
.source {
    width: 940px;
    height: 30px;
    padding-left: 20px;
    margin-bottom: 20px;
    line-height: 30px;
    font-size: 14px;
    text-align: left;
    border-radius: 6px;
    margin-left: 20px;
    background-color: #DEEBF7;
}

/*order属性*/

/*order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。*/

.wrap3 {
    flex-direction:column;
    width:150px;
    height:180px;
    margin-bottom:30px;
}



/*flex-grow属性*/

/*flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。*/



/*flex-shrink属性*/

/*
    flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。

    如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。
    负值对该属性无效。
*/



/*flex-basis属性*/

/*
    flex-basis: <length> | auto;     default auto 

    flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。

    它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。
*/



/*flex属性*/

/*
    flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]

    flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。

    该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。

    建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。
*/



/*align-self属性*/

.wrap9,.wrap10,.wrap11,.wrap12,.wrap13,.wrap14 {
    height: 200px;
}

/*align-self: auto;*/
.wrap9 .item3 {
    display: flex;
    align-self: auto;
}

/*align-self: flex-start;*/
.wrap10 .item3 {
    display: flex;
    align-self: flex-start;
}

/*align-self: flex-end;*/
.wrap11 .item3 {
    display: flex;
    align-self: flex-end;
}

/*align-self: center;*/
.wrap12 .item3 {
    display: flex;
    align-self: center;
}

/*align-self: baseline;*/
.wrap13 .item3 {
    display: flex;
    align-self: baseline;
}

/*align-self: stretch;*/
.wrap14 .item3 {
    display: flex;
    align-self: stretch;
}

/*
    align-self: auto | flex-start | flex-end | center | baseline | stretch;

    align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。
*/